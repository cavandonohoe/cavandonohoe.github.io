name: Build & Deploy R Markdown site

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2
      
      - name: Validate DESCRIPTION tokenization
        run: |
          Rscript - <<'RSCRIPT'
          d <- read.dcf("DESCRIPTION")
          imp <- gsub("\\n", " ", d[,"Imports"])
          toks <- trimws(unlist(strsplit(imp, ",\\s*")))
          bad <- toks[grepl("\\s", toks)]
          cat("Imports tokens:\n"); print(toks)
          if (length(bad)) stop("Bad Imports tokens (contain spaces): ", paste(bad, collapse=", "))
          RSCRIPT


      # Install EVERYTHING declared in DESCRIPTION (Imports/Depends/Suggests)
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          dependencies: '"all"'

      # Fail if any library() in Rmd isn't listed in DESCRIPTION
      - name: Validate DESCRIPTION vs library() calls
        run: |
          Rscript - <<'RSCRIPT'
          desc <- read.dcf("DESCRIPTION")
          getfld <- function(f) if (f %in% colnames(desc)) na.omit(desc[, f]) else NA
          declared <- unique(trimws(unlist(strsplit(
            paste(getfld("Imports"), getfld("Depends"), getfld("Suggests"), collapse = ","),
            ",\\s*"
          ))))
          declared <- declared[nzchar(declared) & !grepl("^R\\b", declared)]
          libs_txt <- system("bash -lc \"grep -hoE 'library\\(([^)]+)\\)' *.Rmd || true\"", intern = TRUE)
          libs <- unique(sub("^library\\(([^)]+)\\).*", "\\1", libs_txt))
          missing <- setdiff(libs, declared)
          if (length(missing)) {
            cat("ERROR: Packages used in Rmd but not listed in DESCRIPTION:\n")
            cat(paste0("  - ", missing), sep = "\n")
            quit(status = 1)
          } else {
            cat("All library() packages are declared in DESCRIPTION.\n")
          }
          RSCRIPT

      # Render (uses your CSVs; gs4_deauth already added by your script)
      - name: Render site
        run: Rscript -e 'rmarkdown::render_site(encoding = "UTF-8")'

      # Optional: save built site as PR artifact for preview
      - name: Upload preview artifact
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: site-preview
          path: _site

      # For pushes to main, prepare Pages artifact for deploy
      - name: Upload Pages artifact
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    environment:
      name: github-pages
    steps:
      - uses: actions/deploy-pages@v4
