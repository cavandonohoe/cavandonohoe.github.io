name: Build & Deploy R Markdown site

on:
  push:
    branches: ["main"]
  # pull_request:
  #   branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    env:
      # lets gargle/google libraries auto-detect the key path if you use _common.R
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/sa.json
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Validate DESCRIPTION tokenization
        run: |
          Rscript - <<'RSCRIPT'
          d <- read.dcf("DESCRIPTION")
          imp <- gsub("\\n", " ", d[,"Imports"])
          toks <- trimws(unlist(strsplit(imp, ",\\s*")))
          bad <- toks[grepl("\\s", toks)]
          cat("Imports tokens:\n"); print(toks)
          if (length(bad)) stop("Bad Imports tokens (contain spaces): ", paste(bad, collapse=", "))
          RSCRIPT

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          dependencies: '"all"'
      # --- NEW: write your service account key from repo secret ---
      - name: Write GCP key
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > sa.json

      # --- OPTIONAL but recommended: quick auth sanity check (fails fast if share is missing) ---
      - name: Google auth (sanity check)
        run: |
          Rscript -e 'googledrive::drive_auth(path="sa.json", cache=FALSE); googlesheets4::gs4_auth(path="sa.json", cache=FALSE); googledrive::drive_user()'


      - name: Validate DESCRIPTION vs library() calls
        run: |
          Rscript - <<'RSCRIPT'
          desc <- read.dcf("DESCRIPTION")
          get_tokens <- function(field) {
            if (!field %in% colnames(desc)) return(character())
            x <- desc[, field]
            if (length(x) == 0 || is.na(x)) return(character())
            toks <- trimws(unlist(strsplit(x, ",\\s*")))
            toks <- gsub("\\s*\\(.*\\)$", "", toks)
            toks <- toks[nzchar(toks) & toks != "NA"]
            toks
          }
          declared <- unique(c(get_tokens("Imports"), get_tokens("Depends"), get_tokens("Suggests")))
          declared <- declared[declared != "R"]
          libs_txt <- system("bash -lc \"grep -hoE 'library\\(([^)]+)\\)' *.Rmd || true\"", intern = TRUE)
          libs <- unique(sub("^library\\(([^)]+)\\).*", "\\1", libs_txt))
          tv_core <- c("ggplot2","dplyr","tidyr","readr","purrr","tibble","stringr","forcats")
          if ("tidyverse" %in% declared) libs <- setdiff(libs, tv_core)
          cat("Declared (parsed): ", paste(sort(declared), collapse=", "), "\n", sep="")
          cat("library() calls : ", paste(sort(libs),     collapse=", "), "\n", sep="")
          missing <- setdiff(libs, declared)
          if (length(missing)) {
            cat("ERROR: Packages used in Rmd but not listed in DESCRIPTION:\n")
            cat(paste0("  - ", missing), sep = "\n")
            quit(status = 1)
          } else {
            cat("All library() packages are declared in DESCRIPTION.\n")
          }
          RSCRIPT

      - name: Verify gs4 guards are present
        run: Rscript scripts/ensure_gs4_guards.R

      # If you DO render PDFs on CI, keep these two lines. Otherwise, remove Setup Chrome and the env block below.
      - name: Setup Chrome
        if: ${{ github.event_name != 'pull_request' || github.ref == 'refs/heads/main' }}
        id: chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Render site
        env:
          CHROMOTE_CHROME: ${{ steps.chrome.outputs.chrome-path }}
        run: |
          Rscript -e 'googledrive::drive_auth(path="sa.json", cache=FALSE); googlesheets4::gs4_auth(path="sa.json", cache=FALSE); rmarkdown::render_site(encoding="UTF-8")'


      - name: Upload Pages artifact
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}   # âœ… main only
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}   # shows the preview URL in the job UI
    permissions:
      pages: write
      id-token: write
      pull-requests: write
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Comment preview URL
        if: ${{ github.event_name == 'pull_request' }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: "ðŸš€ Preview: ${{ steps.deployment.outputs.page_url }}"
          mode: upsert
          create_if_not_exists: true

