name: Build site + deploy prod & PR previews (branch-based Pages)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, closed]
  workflow_dispatch:

permissions:
  contents: write      # push to gh-pages
  pull-requests: write # optional: to comment preview links

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    outputs:
      is_pr: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4

      # --- R / Pandoc setup (tweak if needed) ---
      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: "3.1.11"

      - name: Install R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            local::.
            any::rmarkdown
            any::knitr
            any::lubridate
            any::pagedown
          needs: website
          use-public-rspm: true

      # If some Rmds try to PDF on CI, you can guard or install TinyTeX.
      # - name: Setup TinyTeX (optional)
      #   uses: r-lib/actions/setup-tinytex@v2

      - name: Render site
        env:
          CI: "true"
        run: |
          R -q -e 'rmarkdown::render_site(".", encoding = "UTF-8")'
          test -d _site || (echo "No _site dir found"; exit 1)

      - name: Upload built site
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: _site

  deploy_prod:
    name: Deploy production (gh-pages root)
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download site
        uses: actions/download-artifact@v4
        with:
          name: site
          path: _site

      - name: Publish to gh-pages root
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: _site
          keep_files: true      # keep any pr-*/ folders
          # cname: your.domain.com  # only if you use a custom domain

  deploy_preview:
    name: Deploy PR preview (gh-pages/pr-<num>/)
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download site
        uses: actions/download-artifact@v4
        with:
          name: site
          path: _site

      - name: Publish PR preview folder
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: _site
          destination_dir: pr-${{ github.event.pull_request.number }}
          keep_files: true

      - name: Comment preview URL
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: "ðŸš€ Preview: https://cavandonohoe.github.io/pr-${{ github.event.pull_request.number }}/"
          mode: upsert
          create_if_not_exists: true

  cleanup_preview:
    name: Remove PR preview on close
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Delete folder and push
        run: |
          set -e
          rm -rf "pr-${{ github.event.pull_request.number }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore: remove preview for PR #${{ github.event.pull_request.number }}" || echo "No changes"
          git push
